#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace car
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="login")]
	public partial class MydatabaseDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
        public string Password;
        public string Position;
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertLogin(Login instance);
    partial void UpdateLogin(Login instance);
    partial void DeleteLogin(Login instance);
    partial void InsertPrice_List(Price_List instance);
    partial void UpdatePrice_List(Price_List instance);
    partial void DeletePrice_List(Price_List instance);
    partial void InsertSales_Report(Sales_Report instance);
    partial void UpdateSales_Report(Sales_Report instance);
    partial void DeleteSales_Report(Sales_Report instance);
    partial void InsertSales_Register(Sales_Register instance);
    partial void UpdateSales_Register(Sales_Register instance);
    partial void DeleteSales_Register(Sales_Register instance);
    partial void InsertStock_Register(Stock_Register instance);
    partial void UpdateStock_Register(Stock_Register instance);
    partial void DeleteStock_Register(Stock_Register instance);
    partial void InsertEmployee_list(Employee_list instance);
    partial void UpdateEmployee_list(Employee_list instance);
    partial void DeleteEmployee_list(Employee_list instance);
    #endregion
		
		public MydatabaseDataContext() : 
				base(global::car.Properties.Settings.Default.loginConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public MydatabaseDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MydatabaseDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MydatabaseDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MydatabaseDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Login> Logins
		{
			get
			{
				return this.GetTable<Login>();
			}
		}
		
		public System.Data.Linq.Table<Price_List> Price_Lists
		{
			get
			{
				return this.GetTable<Price_List>();
			}
		}
		
		public System.Data.Linq.Table<Sales_Report> Sales_Reports
		{
			get
			{
				return this.GetTable<Sales_Report>();
			}
		}
		
		public System.Data.Linq.Table<Sales_Register> Sales_Registers
		{
			get
			{
				return this.GetTable<Sales_Register>();
			}
		}
		
		public System.Data.Linq.Table<Stock_Register> Stock_Registers
		{
			get
			{
				return this.GetTable<Stock_Register>();
			}
		}
		
		public System.Data.Linq.Table<Employee_list> Employee_lists
		{
			get
			{
				return this.GetTable<Employee_list>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Login")]
	public partial class Login : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Password;
		
		private string _Position;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnPositionChanging(string value);
    partial void OnPositionChanged();
    #endregion
		
		public Login()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Position", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Position
		{
			get
			{
				return this._Position;
			}
			set
			{
				if ((this._Position != value))
				{
					this.OnPositionChanging(value);
					this.SendPropertyChanging();
					this._Position = value;
					this.SendPropertyChanged("Position");
					this.OnPositionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Price_List")]
	public partial class Price_List : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Serial_Number;
		
		private string _Type_of_Vehicle;
		
		private string _Model;
		
		private int _Price;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSerial_NumberChanging(int value);
    partial void OnSerial_NumberChanged();
    partial void OnType_of_VehicleChanging(string value);
    partial void OnType_of_VehicleChanged();
    partial void OnModelChanging(string value);
    partial void OnModelChanged();
    partial void OnPriceChanging(int value);
    partial void OnPriceChanged();
    #endregion
		
		public Price_List()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Serial Number]", Storage="_Serial_Number", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Serial_Number
		{
			get
			{
				return this._Serial_Number;
			}
			set
			{
				if ((this._Serial_Number != value))
				{
					this.OnSerial_NumberChanging(value);
					this.SendPropertyChanging();
					this._Serial_Number = value;
					this.SendPropertyChanged("Serial_Number");
					this.OnSerial_NumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Type of Vehicle]", Storage="_Type_of_Vehicle", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Type_of_Vehicle
		{
			get
			{
				return this._Type_of_Vehicle;
			}
			set
			{
				if ((this._Type_of_Vehicle != value))
				{
					this.OnType_of_VehicleChanging(value);
					this.SendPropertyChanging();
					this._Type_of_Vehicle = value;
					this.SendPropertyChanged("Type_of_Vehicle");
					this.OnType_of_VehicleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Model
		{
			get
			{
				return this._Model;
			}
			set
			{
				if ((this._Model != value))
				{
					this.OnModelChanging(value);
					this.SendPropertyChanging();
					this._Model = value;
					this.SendPropertyChanged("Model");
					this.OnModelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Int NOT NULL")]
		public int Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sales_Report")]
	public partial class Sales_Report : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Serial_Number;
		
		private System.DateTime _Date;
		
		private string _Type_of_Vehicle;
		
		private string _Model;
		
		private string _Custoer_Name;
		
		private string _Customer_Address;
		
		private int _Customer_Phone_Number;
		
		private int _Sales_Vlue;
		
		private string _Money_Receipt_Number;
		
		private string _Delivery_Number;
		
		private string _Body_Number;
		
		private string _Engine_Number;
		
		private int _Employee_Id;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSerial_NumberChanging(int value);
    partial void OnSerial_NumberChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnType_of_VehicleChanging(string value);
    partial void OnType_of_VehicleChanged();
    partial void OnModelChanging(string value);
    partial void OnModelChanged();
    partial void OnCustoer_NameChanging(string value);
    partial void OnCustoer_NameChanged();
    partial void OnCustomer_AddressChanging(string value);
    partial void OnCustomer_AddressChanged();
    partial void OnCustomer_Phone_NumberChanging(int value);
    partial void OnCustomer_Phone_NumberChanged();
    partial void OnSales_VlueChanging(int value);
    partial void OnSales_VlueChanged();
    partial void OnMoney_Receipt_NumberChanging(string value);
    partial void OnMoney_Receipt_NumberChanged();
    partial void OnDelivery_NumberChanging(string value);
    partial void OnDelivery_NumberChanged();
    partial void OnBody_NumberChanging(string value);
    partial void OnBody_NumberChanged();
    partial void OnEngine_NumberChanging(string value);
    partial void OnEngine_NumberChanged();
    partial void OnEmployee_IdChanging(int value);
    partial void OnEmployee_IdChanged();
    #endregion
		
		public Sales_Report()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Serial Number]", Storage="_Serial_Number", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Serial_Number
		{
			get
			{
				return this._Serial_Number;
			}
			set
			{
				if ((this._Serial_Number != value))
				{
					this.OnSerial_NumberChanging(value);
					this.SendPropertyChanging();
					this._Serial_Number = value;
					this.SendPropertyChanged("Serial_Number");
					this.OnSerial_NumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="Date NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Type of Vehicle]", Storage="_Type_of_Vehicle", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Type_of_Vehicle
		{
			get
			{
				return this._Type_of_Vehicle;
			}
			set
			{
				if ((this._Type_of_Vehicle != value))
				{
					this.OnType_of_VehicleChanging(value);
					this.SendPropertyChanging();
					this._Type_of_Vehicle = value;
					this.SendPropertyChanged("Type_of_Vehicle");
					this.OnType_of_VehicleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Model
		{
			get
			{
				return this._Model;
			}
			set
			{
				if ((this._Model != value))
				{
					this.OnModelChanging(value);
					this.SendPropertyChanging();
					this._Model = value;
					this.SendPropertyChanged("Model");
					this.OnModelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Custoer Name]", Storage="_Custoer_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Custoer_Name
		{
			get
			{
				return this._Custoer_Name;
			}
			set
			{
				if ((this._Custoer_Name != value))
				{
					this.OnCustoer_NameChanging(value);
					this.SendPropertyChanging();
					this._Custoer_Name = value;
					this.SendPropertyChanged("Custoer_Name");
					this.OnCustoer_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Customer Address]", Storage="_Customer_Address", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Customer_Address
		{
			get
			{
				return this._Customer_Address;
			}
			set
			{
				if ((this._Customer_Address != value))
				{
					this.OnCustomer_AddressChanging(value);
					this.SendPropertyChanging();
					this._Customer_Address = value;
					this.SendPropertyChanged("Customer_Address");
					this.OnCustomer_AddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Customer Phone Number]", Storage="_Customer_Phone_Number", DbType="Int NOT NULL")]
		public int Customer_Phone_Number
		{
			get
			{
				return this._Customer_Phone_Number;
			}
			set
			{
				if ((this._Customer_Phone_Number != value))
				{
					this.OnCustomer_Phone_NumberChanging(value);
					this.SendPropertyChanging();
					this._Customer_Phone_Number = value;
					this.SendPropertyChanged("Customer_Phone_Number");
					this.OnCustomer_Phone_NumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Sales Vlue]", Storage="_Sales_Vlue", DbType="Int NOT NULL")]
		public int Sales_Vlue
		{
			get
			{
				return this._Sales_Vlue;
			}
			set
			{
				if ((this._Sales_Vlue != value))
				{
					this.OnSales_VlueChanging(value);
					this.SendPropertyChanging();
					this._Sales_Vlue = value;
					this.SendPropertyChanged("Sales_Vlue");
					this.OnSales_VlueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Money Receipt Number]", Storage="_Money_Receipt_Number", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Money_Receipt_Number
		{
			get
			{
				return this._Money_Receipt_Number;
			}
			set
			{
				if ((this._Money_Receipt_Number != value))
				{
					this.OnMoney_Receipt_NumberChanging(value);
					this.SendPropertyChanging();
					this._Money_Receipt_Number = value;
					this.SendPropertyChanged("Money_Receipt_Number");
					this.OnMoney_Receipt_NumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Delivery Number]", Storage="_Delivery_Number", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Delivery_Number
		{
			get
			{
				return this._Delivery_Number;
			}
			set
			{
				if ((this._Delivery_Number != value))
				{
					this.OnDelivery_NumberChanging(value);
					this.SendPropertyChanging();
					this._Delivery_Number = value;
					this.SendPropertyChanged("Delivery_Number");
					this.OnDelivery_NumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Body Number]", Storage="_Body_Number", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Body_Number
		{
			get
			{
				return this._Body_Number;
			}
			set
			{
				if ((this._Body_Number != value))
				{
					this.OnBody_NumberChanging(value);
					this.SendPropertyChanging();
					this._Body_Number = value;
					this.SendPropertyChanged("Body_Number");
					this.OnBody_NumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Engine Number]", Storage="_Engine_Number", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Engine_Number
		{
			get
			{
				return this._Engine_Number;
			}
			set
			{
				if ((this._Engine_Number != value))
				{
					this.OnEngine_NumberChanging(value);
					this.SendPropertyChanging();
					this._Engine_Number = value;
					this.SendPropertyChanged("Engine_Number");
					this.OnEngine_NumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Employee Id]", Storage="_Employee_Id", DbType="Int NOT NULL")]
		public int Employee_Id
		{
			get
			{
				return this._Employee_Id;
			}
			set
			{
				if ((this._Employee_Id != value))
				{
					this.OnEmployee_IdChanging(value);
					this.SendPropertyChanging();
					this._Employee_Id = value;
					this.SendPropertyChanged("Employee_Id");
					this.OnEmployee_IdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sales_Register")]
	public partial class Sales_Register : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Serial_Number;
		
		private System.DateTime _Date;
		
		private string _Type_of_Vehicle;
		
		private string _Model;
		
		private int _Sales_Unit;
		
		private string _Sales_Amount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSerial_NumberChanging(int value);
    partial void OnSerial_NumberChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnType_of_VehicleChanging(string value);
    partial void OnType_of_VehicleChanged();
    partial void OnModelChanging(string value);
    partial void OnModelChanged();
    partial void OnSales_UnitChanging(int value);
    partial void OnSales_UnitChanged();
    partial void OnSales_AmountChanging(string value);
    partial void OnSales_AmountChanged();
    #endregion
		
		public Sales_Register()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Serial Number]", Storage="_Serial_Number", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Serial_Number
		{
			get
			{
				return this._Serial_Number;
			}
			set
			{
				if ((this._Serial_Number != value))
				{
					this.OnSerial_NumberChanging(value);
					this.SendPropertyChanging();
					this._Serial_Number = value;
					this.SendPropertyChanged("Serial_Number");
					this.OnSerial_NumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="Date NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Type of Vehicle]", Storage="_Type_of_Vehicle", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Type_of_Vehicle
		{
			get
			{
				return this._Type_of_Vehicle;
			}
			set
			{
				if ((this._Type_of_Vehicle != value))
				{
					this.OnType_of_VehicleChanging(value);
					this.SendPropertyChanging();
					this._Type_of_Vehicle = value;
					this.SendPropertyChanged("Type_of_Vehicle");
					this.OnType_of_VehicleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Model
		{
			get
			{
				return this._Model;
			}
			set
			{
				if ((this._Model != value))
				{
					this.OnModelChanging(value);
					this.SendPropertyChanging();
					this._Model = value;
					this.SendPropertyChanged("Model");
					this.OnModelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Sales Unit]", Storage="_Sales_Unit", DbType="Int NOT NULL")]
		public int Sales_Unit
		{
			get
			{
				return this._Sales_Unit;
			}
			set
			{
				if ((this._Sales_Unit != value))
				{
					this.OnSales_UnitChanging(value);
					this.SendPropertyChanging();
					this._Sales_Unit = value;
					this.SendPropertyChanged("Sales_Unit");
					this.OnSales_UnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Sales Amount]", Storage="_Sales_Amount", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Sales_Amount
		{
			get
			{
				return this._Sales_Amount;
			}
			set
			{
				if ((this._Sales_Amount != value))
				{
					this.OnSales_AmountChanging(value);
					this.SendPropertyChanging();
					this._Sales_Amount = value;
					this.SendPropertyChanged("Sales_Amount");
					this.OnSales_AmountChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Stock_Register")]
	public partial class Stock_Register : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Serial_Number;
		
		private System.DateTime _Date;
		
		private string _Type_of_Car;
		
		private string _Model;
		
		private int _Total_Num;
		
		private int _Sales_Number;
		
		private int _Current_Stock;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSerial_NumberChanging(int value);
    partial void OnSerial_NumberChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnType_of_CarChanging(string value);
    partial void OnType_of_CarChanged();
    partial void OnModelChanging(string value);
    partial void OnModelChanged();
    partial void OnTotal_NumChanging(int value);
    partial void OnTotal_NumChanged();
    partial void OnSales_NumberChanging(int value);
    partial void OnSales_NumberChanged();
    partial void OnCurrent_StockChanging(int value);
    partial void OnCurrent_StockChanged();
    #endregion
		
		public Stock_Register()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Serial Number]", Storage="_Serial_Number", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Serial_Number
		{
			get
			{
				return this._Serial_Number;
			}
			set
			{
				if ((this._Serial_Number != value))
				{
					this.OnSerial_NumberChanging(value);
					this.SendPropertyChanging();
					this._Serial_Number = value;
					this.SendPropertyChanged("Serial_Number");
					this.OnSerial_NumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="Date NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Type of Car]", Storage="_Type_of_Car", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Type_of_Car
		{
			get
			{
				return this._Type_of_Car;
			}
			set
			{
				if ((this._Type_of_Car != value))
				{
					this.OnType_of_CarChanging(value);
					this.SendPropertyChanging();
					this._Type_of_Car = value;
					this.SendPropertyChanged("Type_of_Car");
					this.OnType_of_CarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Model
		{
			get
			{
				return this._Model;
			}
			set
			{
				if ((this._Model != value))
				{
					this.OnModelChanging(value);
					this.SendPropertyChanging();
					this._Model = value;
					this.SendPropertyChanged("Model");
					this.OnModelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Total Num]", Storage="_Total_Num", DbType="Int NOT NULL")]
		public int Total_Num
		{
			get
			{
				return this._Total_Num;
			}
			set
			{
				if ((this._Total_Num != value))
				{
					this.OnTotal_NumChanging(value);
					this.SendPropertyChanging();
					this._Total_Num = value;
					this.SendPropertyChanged("Total_Num");
					this.OnTotal_NumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Sales Number]", Storage="_Sales_Number", DbType="Int NOT NULL")]
		public int Sales_Number
		{
			get
			{
				return this._Sales_Number;
			}
			set
			{
				if ((this._Sales_Number != value))
				{
					this.OnSales_NumberChanging(value);
					this.SendPropertyChanging();
					this._Sales_Number = value;
					this.SendPropertyChanged("Sales_Number");
					this.OnSales_NumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Current Stock]", Storage="_Current_Stock", DbType="Int NOT NULL")]
		public int Current_Stock
		{
			get
			{
				return this._Current_Stock;
			}
			set
			{
				if ((this._Current_Stock != value))
				{
					this.OnCurrent_StockChanging(value);
					this.SendPropertyChanging();
					this._Current_Stock = value;
					this.SendPropertyChanged("Current_Stock");
					this.OnCurrent_StockChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Employee_list")]
	public partial class Employee_list : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Address;
		
		private string _Email;
		
		private int _Phone_No_;
		
		private string _Position;
		
		private string _Password;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPhone_No_Changing(int value);
    partial void OnPhone_No_Changed();
    partial void OnPositionChanging(string value);
    partial void OnPositionChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    #endregion
		
		public Employee_list()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Phone No.]", Storage="_Phone_No_", DbType="Int NOT NULL")]
		public int Phone_No_
		{
			get
			{
				return this._Phone_No_;
			}
			set
			{
				if ((this._Phone_No_ != value))
				{
					this.OnPhone_No_Changing(value);
					this.SendPropertyChanging();
					this._Phone_No_ = value;
					this.SendPropertyChanged("Phone_No_");
					this.OnPhone_No_Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Position", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Position
		{
			get
			{
				return this._Position;
			}
			set
			{
				if ((this._Position != value))
				{
					this.OnPositionChanging(value);
					this.SendPropertyChanging();
					this._Position = value;
					this.SendPropertyChanged("Position");
					this.OnPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
